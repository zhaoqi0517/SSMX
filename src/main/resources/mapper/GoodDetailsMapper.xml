<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sf.ssm.dao.GoodDetailsDao">

    <!-- goodAfterRate和industryCompare在表中对应的数据类型是nvarchar -->
    <resultMap id="goodDetailsResultMap" type="com.sf.ssm.entity.GoodDetails">
        <id column="Good_ID" property="goodId" jdbcType="NVARCHAR"/>
        <result column="Good_Name" property="goodName" jdbcType="NVARCHAR"/>
        <result column="Good_Brand" property="goodBrand" jdbcType="NVARCHAR"/>
        <result column="Good_Price" property="goodPrice" jdbcType="NVARCHAR"/>
        <result column="Monthsale_Num" property="monthsaleNum" jdbcType="INTEGER"/>
        <result column="Good_Hot" property="goodHot" jdbcType="INTEGER"/>
        <result column="Store_Name" property="storeName" jdbcType="NVARCHAR"/>
        <result column="Store_Link" property="storeLink" jdbcType="NVARCHAR"/>
        <result column="Store_Add" property="storeAdd" jdbcType="NVARCHAR"/>
        <result column="Seller_Credit" property="sellerCredit" jdbcType="NVARCHAR"/>
        <result column="Ishas_License" property="ishasLicense" jdbcType="INTEGER"/>
        <result column="Color_Classification" property="colorClassification" jdbcType="NVARCHAR"/>
        <result column="Comment_Num" property="commentNum" jdbcType="INTEGER"/>
        <result column="Good_AfterRate" property="goodAfterRate" jdbcType="NVARCHAR"/>
        <result column="Industry_Compare" property="industryCompare" jdbcType="NVARCHAR"/>
        <result column="Good_Link" property="goodLink" jdbcType="NVARCHAR"/>
        <result column="DescriptionSituation" property="descriptionSituation" jdbcType="DECIMAL"/>
        <result column="ServiceAttitude" property="serviceAttitude" jdbcType="DECIMAL"/>
        <result column="LogisticsService" property="logisticsService" jdbcType="DECIMAL"/>
    </resultMap>


    <select id="findGoodDetailsById" resultMap="goodDetailsResultMap"
            parameterType="String">
        select * from Commodity_list where Good_ID =
        #{id}
    </select>
    <select id="findGoods" resultType="com.sf.ssm.entity.GoodDetails">
        select
              Good_Name,
              Good_Price,
              Good_Brand,
              Store_Add,Color_Classification,
              Good_Link,Seller_Credit
        FROM
             commodity_list a
             join commodity_classification b
             on a.Classify_Description=b.Description
        WHERE 1=1
        <if test="location != null and location !=''">
            AND Store_Add LIKE concat(concat('%',#{location}),'%')
        </if>
          
    </select>

    <insert id="insertGood" parameterType="com.sf.ssm.entity.GoodDetails" >
        INSERT INTO commodity_list
        (Good_ID,
        Classify_ID,
        Classify_Description,
        Good_Brand,
        Good_Name,
        Good_Price,
        Store_Add,
        Monthsale_Num,
        Color_Classification,
        Comment_Num,
        Good_AfterRate,
        IndustryCompare,
        Good_Link,
        Store_Name,
        Store_Link,
        Good_Hot,
        Store_Age,
        Seller_Credit,
        Ishas_License,
        DescriptionSituation,
        ServiceAttitude,
        LogisticsService,
        Size)
        VALUES
        (
        #{goodDetails.goodId},
        null,
        null,
        #{goodDetails.goodBrand},
        #{goodDetails.goodName},
        #{goodDetails.goodPrice},
        #{goodDetails.storeAdd},
        #{goodDetails.monthsaleNum},
        #{goodDetails.colorClassification},
        #{goodDetails.commentNum},
        #{goodDetails.goodAfterRate},
        #{goodDetails.industryCompare},
        #{goodDetails.goodLink},
        #{goodDetails.storeName},
        #{goodDetails.storeLink},
        #{goodDetails.goodHot},
        1,
        #{goodDetails.sellerCredit},
        #{goodDetails.ishasLicense},
        #{goodDetails.descriptionSituation},
        #{goodDetails.serviceAttitude},
        #{goodDetails.logisticsService},
        1);
</insert>

</mapper>
